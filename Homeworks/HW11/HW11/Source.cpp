#define SIZE 10
#include <iostream>
using namespace std;

int main()
{
    setlocale(LC_ALL, "Rus");
    srand(time(0));
    int mas[SIZE];
    for (int i = 0; i < SIZE; i++) {
        //mas[i] = rand() % 5; // [0;4]
        //cout << mas[i] << " ";
        // совмещенные команды
        cout << (mas[i] = rand() % 5) << " "; // cout << (a=b,10)
    }
    cout << endl;
    // 1) вариант с использованием дополнительного массива
    int mas2[SIZE]; // не иниц-ванный массив
    //int mas2[SIZE] = {10/*,0,0,....*/}; // частичная иниц-ция массива знач., остальную часть массива компилятор заполняет нулями
    int j = 0; // внешний индекс для 2-го массива
    for (int i = 0; i < SIZE; i++) { // цикл по 1-му массиву
        if (mas[i] != 0) { // копирование с смещением, со сдвигом
            mas2[j] = mas[i];
            j++; // индек j отстает от индекса i
        }
    }
    // цикл заполнения пустых ячеек 2-го массива значениями -1
    for (; j < SIZE; j++) {
        mas2[j] = -1;
    }
    for (int i = 0; i < SIZE; i++) {
        cout << mas2[i] << " ";
    }
    cout << endl;
    //                             1 1
    //       [ 0 1 2 3 4 5 6 7 8 9 0 1 ]
    // mas:  { 8 5 0 6 1 0 5 6 1 0 3 1 }  <== i
    // mas2: { 8 5 6 1 5 6 1 3 1 ? ? ? }  <== j
    //  i  mas[ i ]  mas2[ j ]
    //  0  [0]:8 ==>  [0]:8 j++
    //  1  [1]:5 ==>  [1]:5 j++
    //  2  [2]:0  X         j
    //  3  [3]:6 ==>  [2]:6 j++
    //  4  [4]:4 ==>  [3]:1 j++
    //  5  [5]:0  X         j
    //  6  [6]:5 ==>  [4]:5 j++
    //  7  [7]:6 ==>  [5]:6 j++
    //  8  [8]:1 ==>  [6]:1 j++
    //  9  [9]:0  X         j
    // 10 [10]:3 ==>  [7]:3 j++
    // 11 [11]:1 ==>  [8]:1 j++ 8 ==> 9


    cin.get(); cin.get();
}