// выключить предупреждени€ уровн€ ошибок дл€
//  не безопасных функци работы с строками strcpy(),strcat(),gets()
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
using namespace std;
// выключить все ошибки и предупреждени€ компил€тора 
//  под кодом C4996
#pragma warning(disable: 4996)

/*
  Ќаписание функций поиска и удалени€ пробелов
LTrim() - удаление пробельных символов слева - ведущие пробелы
RTrim() - удаление пробельных символов справа - конечные пробелы
Trim()  - удаление пробельных символов справа и слева

TrimAll() - удаление всех лишних   пробелов
            удаление всех лишних пробелов
*/
// "ldjfvlkdj dv dfv dfvdfv dfvdvd"
// ѕрототипы
// ‘-ци€ удалени€ ведущих (слева) пробелов в строке
char* LTrim(char* str);
// ‘-ци€ удалени€ хвостовых (справа) пробелов в строке
char* RTrim(char* str);
// ‘-ци€ удалени€ ведущих и хвостовых пробелов в строке
char* Trim(char* str);
// ‘-ци€ удалени€ всех лишних пробелов в строке
char* TrimAll(char* str);
#define SIZE 1000
int main()
{
  system("chcp 1251 > nul");
  char str[SIZE];
  
  cout << "¬ведите строку: ";
  cin.getline(str, SIZE);
 
  cout << "\"" << str << "\"" << endl;
  //cout << "\"" << RTrim(str) << "\"" << endl;
  //cout << "\"" << LTrim(str) << "\"" << endl;
  //cout << "\"" << Trim(str) << "\"" << endl;
  cout << "\"" << TrimAll(str) << "\"" << endl;

  cin.get(); cin.get();
}

// ‘-ци€ удалени€ хвостовых (справа) пробелов в строке
char* RTrim(char* str) {
  int size = strlen(str);
  for (int i = size - 1; i >= 0; i--)
  {
    if (str[i] != ' ')
    {
      str[i + 1] = '\0';
      return str;  //break;
     }
  }
  str[0] = '\0';
  return str;
}
char* LTrim(char* str)
{
  
  int i = 0, j = 0;
  for (i = 0; str[i] != '\0'; i++)
  {
    if (str[i] != ' ')
    {
      break;
    }
  }
  for ( j = 0; str[i] != '\0'; j++, i++)
  {
    str[j] = str[i];
   }
  str[j] = '\0';
  return str;
}
char* Trim(char* str)
{
  //return RTrim(LTrim(str));
  return LTrim(RTrim(str));
}

char* TrimAll(char* str)
{
  Trim(str);
  for (int i = 0; str[i] != '\0'; i++) {
    if (str[i] == ' ')
    {
      LTrim(str + i +1);
     // LTrim(&str[i + 1]);
    }
  }
  return str;
}
